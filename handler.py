import json
import requests
from logger import logger

def handle(data):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∫–∞—Ä—Ç–æ–π –¥–ª—è SaleBot
    """
    try:
        logger.info(f"Received data: {data}")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        webapp_data = data.get('webapp_data', '{}')
        location_data = json.loads(webapp_data)
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏
        address = location_data.get('address', '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω')
        latitude = location_data.get('latitude', 0)
        longitude = location_data.get('longitude', 0)
        coordinates = location_data.get('coordinates', '0, 0')
        user_id = location_data.get('user_id', '')
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        if not address or address == '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω':
            return json.dumps({
                'success': False,
                'error': 'No address selected',
                'message': '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∞–¥—Ä–µ—Å –Ω–∞ –∫–∞—Ä—Ç–µ'
            })
        
        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        logger.info(f"User {user_id} selected address: {address}")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç–µ
        return json.dumps({
            'success': True,
            'selected_address': address,
            'selected_latitude': latitude,
            'selected_longitude': longitude,
            'selected_coordinates': coordinates,
            'user_id': user_id,
            'message': f'‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ—á–∫—É:\n\nüìç {address}\nüåê –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {coordinates}'
        })
        
    except json.JSONDecodeError as e:
        logger.error(f"JSON decode error: {str(e)}")
        return json.dumps({
            'success': False,
            'error': 'Invalid JSON format',
            'message': '‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö'
        })
        
    except Exception as e:
        logger.error(f"Error processing location data: {str(e)}")
        return json.dumps({
            'success': False,
            'error': str(e),
            'message': '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–æ—á–∫–∏'
        })

# –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    test_data = {
        'webapp_data': '{"address":"–ú–æ—Å–∫–≤–∞, –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å","latitude":55.7539,"longitude":37.6208,"coordinates":"55.7539, 37.6208","user_id":12345}'
    }
    result = handle(test_data)
    print("Test result:", result)